
#define CATCH_CONFIG_ENABLE_BENCHMARKING
// Раскомментировать, если нужны бенчмарки
//#define PURLONG_ENABLE_BENCHMARKS
#include "../third_party/catch.hpp"
#include "../src/purlong.h"
#include <vector>
#include <string>
using namespace std;


TEST_CASE("unary +")
{
    auto number = GENERATE("0", "-123","1234327980432097809423172143");
    CHECK(+PurLong(number) == PurLong(number));
}

TEST_CASE("unary -")
{
    vector<string> initial{
        "0",
        "1",
        "-1",
        "430298103492187432987439874923084023949324719328947238904348749172473014789047928347"
    };
    vector<string> answer{
        "0",
        "-1",
        "1",
        "-430298103492187432987439874923084023949324719328947238904348749172473014789047928347"
    };

    for(int i{0}; i < initial.size(); i++)
    {
        CHECK(-PurLong(initial[i]) == PurLong(answer[i]));
    }
}

TEST_CASE("binary +")
{
    SECTION("positive numbers")
    {
        vector<string> lValue
        {"1",
        "2",
        "78",
        "999999999999999",
};
        vector<string> rValue
        {"324", 
        "32423432",
        "2", 
        "999999999999999999999911111111111111111111",
};
        vector<string> resultSum
        {"325",
        "32423434",
        "80", 
        "999999999999999999999911112111111111111110",
        "215968649960625493665952960784684961874249814618966493476432996252886257395262857957575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757576865343686557892657922979447282666626262626262626262626262626262626262626262626262629465639777797979797979797979797979797979797979797979768643573895366429752827375929674583568625562699971975264978922744906253690474329966432957865299624729752247882421596864996062549366595296078468496187424981461896649347643299625288625739526285795757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757686534368655789265792297944728266662626262626262626262626262626262626262626262626262946563977779797979797979797979797979797979797979797976864357389536642975282737592967458356862556269997197526497892274490625369047432996643295786529962472975224788242159686499606254936659529607846849618742498146189664934764329962528862573952628579575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575768653436865578926579229794472826666262626262626262626262626262626262626262626262626294656397777979797979797979797979797979797979797979797686435738953664297528273759296745835686255626999719752649789227449062536904743299664329578652996247297522478824215968649960625493665952960784684961874249814618966493476432996252886257395262857957575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757576865343686557892657922979447282666626262626262626262626262626262626262626262626262629465639777797979797979797979797979797979797979797979768643573895366429752827375929674583568625562699971975264978922744906253690474329966432957865299624729752247882421596864996062549366595296078468496187424981461896649347643299625288625739526285795757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757686534368655789265792297944728266662626262626262626262626262626262626262626262626262946563977779797979797979797979797979797979797979797976864357389536642975282737592967458356862556269997197526497892274490625369047432996643295786529962472975224788242159686499606254936659529607846849618742498146189664934764329962528862573952628579575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575757575768653436865578926579229794472826666262626262626262626262626262626262626262626262626294656397777979797979797979797979797979797979797979797686435738953664297528273759296745835686255626999719752649789227449062536904743299664329578652996247297522478824"};

        for(int i{0}; i<lValue.size(); i++)
        {
            CHECK(PurLong(lValue[i])+PurLong(rValue[i])==PurLong(resultSum[i]));
        }
    }
    #ifdef PURLONG_ENABLE_BENCHMARKS
    SECTION("benchmarks")
    {
        // готовим данные
        string a{};
        for(int i{0}; i < 334; i++)
        {
            a += "999999999";
        }
        BENCHMARK("sum of two 3000-digit numbers")
        {
            return (PurLong(a)+PurLong(a));
        };
    }
    #endif
}

TEST_CASE("binary -")
{
    SECTION("positive numbers")
    {
        vector<string> lValue{
            "1",
            "1234567891",
            "55555555555555555",
            "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",

        };

        vector<string> rValue{
            "1",
            "999999999999999999999999999",
            "99999999999999",
            "123456789123456789123456789123456789123456789123456789123456789123456789123456789",

        };

        vector<string> resultDifference{
            "0",
            "-999999999999999998765432108",
            "55455555555555556",
            "99999999999999999999999999999999999999999999999999876543210876543210876543210876543210876543210876543210876543210876543210876543211",
            "0"
        };

        for(int i{0}; i < lValue.size(); i++)
        {
            INFO(i);
            CHECK(PurLong(lValue[i])-PurLong(rValue[i]) == PurLong(resultDifference[i]));
        }
    }
    #ifdef PURLONG_ENABLE_BENCHMARKS
    SECTION("benchmarks")
    {

        BENCHMARK("difference of 3000-digit number and 2500-digit number")
        {
            return (PurLong("1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
            -
            PurLong
            );
        };
        // Готовим данные 
        // Эта бенчмарка занимает порядка 3.5 минут, поэтому закомментирована
        // string lValue{};
        // for(int i{0}; i < 1'000'000; i++)
        // {
        //     lValue += "9";
        // }
        // string rValue{};
        // for(int i{0}; i < 111'111; i++)
        // {
        //     rValue+="123456789";
        // }
        // BENCHMARK("difference of two 1'000'000-digit numbers")
        // {
        //     return(PurLong(lValue)-PurLong(rValue));
        // };
    }
    #endif
}

TEST_CASE("increment")
{
    vector<string> initial{"0", "1", "999999999"};
    vector<string> result{"1", "2", "1000000000"};
    SECTION("prefix increment")
    {
        for(int i{0}; i < initial.size(); i++)
        {
            CHECK((++PurLong(initial[i]))==PurLong(result[i]));
        }
    }
    SECTION("postfix increment")
    {
        for(int i{0}; i < initial.size(); i++)
        {
            CHECK((PurLong(initial[i])++)==PurLong(result[i]));
        }
    }
}